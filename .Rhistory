install.packages("rlang")
install.packages("rlang")
library(STK)
load("C:/Users/LGS/Desktop/NIFS_JMA_merged_1964_2021.RData")
?usethis::use_data
NW_nutrients <- df_all
use_data(NW_nutrients)
library(usethis)
use_data(NW_nutrients)
NW_obs <- df_all
use_data(NW_obs)
devtools::load_all(".")
devtools::load_all(".")
data("NW_obs")
library(STK)
data("NW_obs")
# step 1: loading data and subroutines
library(tidyverse) # utils
library(raster)    # raster object handling
library(lubridate) # time object processing utils
# library(data.table)
# core subroutine library
# remotes::install_github("Gi-Seop/STK")
# library(STK) # spatio-temporal kriging subroutines
library(tidyverse)
library(lubridate)
period_st <- ymd(paste0(yy,"0101")) - days(90)
period_ed <- ymd(paste0(yy,"1231")) + days(90)
period_st <- ymd(20200101) - days(90)
period_ed <- ymd(20201231) + days(90)
# data filtering
no3_sample <- NW_obs %>%
filter(!is.na(NO3), !is.na(tm_x), !is.na(tm_y), !is.na(depth), !is.na(date_time),
NO3 < 45, NO3 >= 0) %>% # NO3 values were filtered based on WOD 18 Appendix
mutate(decimal_t = decimal_date(date_time)) %>%
filter(date_time >= period_st, date_time <= period_ed) %>%
as.data.frame
no3_sample %>% str
# remove duplicated observation
sample_4d <- obs_df %>%
group_by(x = tm_x, y = tm_y, z = depth, t = decimal_t) %>%
summarise(val = mean(NO3, na.rm = T)) %>%
as.data.frame
# pre defined object
## number of samples
sample_n <- nrow(sample_4d)
scale <- TRUE # coordinate scaling
# scaling observation data.frame coordinates
if(scale == TRUE){
## for revert scaling values
min_x <- site_ext@xmin
max_x <- site_ext@xmax
min_y <- site_ext@ymin
max_y <- site_ext@ymax
min_z <- depth_ext[1]
max_z <- depth_ext[2]
min_t <- decimal_date(period_st)
max_t <- decimal_date(period_ed)
range_x <- max_x - min_x
range_y <- max_y - min_y
range_z <- max_z - min_z
range_t <- max_t - min_t
sample_4d[, "x"] <- fixed_scale_minmax(sample_4d[, "x"], min_x, max_x)
sample_4d[, "y"] <- fixed_scale_minmax(sample_4d[, "y"], min_y, max_y)
sample_4d[, "z"] <- fixed_scale_minmax(sample_4d[, "z"], min_z, max_z)
sample_4d[, "t"] <- fixed_scale_minmax(sample_4d[, "t"], min_t, max_t)
}
site_ext <- extent(c(-1606623.6, 810580.1, -785323.7, 1455642.5))
depth_ext <- range(bathy_east_asia$z %>% unique)
load("C:/Users/LGS/Desktop/bathy_east_asia_10min.RData")
site_ext <- extent(c(-1606623.6, 810580.1, -785323.7, 1455642.5))
depth_ext <- range(bathy_east_asia$z %>% unique)
# data filtering
no3_sample <- NW_obs %>%
filter(!is.na(NO3), !is.na(tm_x), !is.na(tm_y), !is.na(depth), !is.na(date_time),
NO3 < 45, NO3 >= 0) %>% # NO3 values were filtered based on WOD 18 Appendix
mutate(decimal_t = decimal_date(date_time)) %>%
filter(date_time >= period_st, date_time <= period_ed) %>%
as.data.frame
# remove duplicated observation
sample_4d <- obs_df %>%
group_by(x = tm_x, y = tm_y, z = depth, t = decimal_t) %>%
summarise(val = mean(NO3, na.rm = T)) %>%
as.data.frame
# remove duplicated observation
sample_4d <- no3_sample %>%
group_by(x = tm_x, y = tm_y, z = depth, t = decimal_t) %>%
summarise(val = mean(NO3, na.rm = T)) %>%
as.data.frame
# pre defined object
## number of samples
sample_n <- nrow(sample_4d)
scale <- TRUE # coordinate scaling
# scaling observation data.frame coordinates
if(scale == TRUE){
## for revert scaling values
min_x <- site_ext@xmin
max_x <- site_ext@xmax
min_y <- site_ext@ymin
max_y <- site_ext@ymax
min_z <- depth_ext[1]
max_z <- depth_ext[2]
min_t <- decimal_date(period_st)
max_t <- decimal_date(period_ed)
range_x <- max_x - min_x
range_y <- max_y - min_y
range_z <- max_z - min_z
range_t <- max_t - min_t
sample_4d[, "x"] <- fixed_scale_minmax(sample_4d[, "x"], min_x, max_x)
sample_4d[, "y"] <- fixed_scale_minmax(sample_4d[, "y"], min_y, max_y)
sample_4d[, "z"] <- fixed_scale_minmax(sample_4d[, "z"], min_z, max_z)
sample_4d[, "t"] <- fixed_scale_minmax(sample_4d[, "t"], min_t, max_t)
}
sample_4d
# # target grid generation
bathy_east_asia_sc <- data.frame(x = (bathy_east_asia$x - min_x)/(range_x),
y = (bathy_east_asia$y - min_y)/(range_y),
z = (bathy_east_asia$z - min_z)/(range_z))
target_t <- seq(ymd(paste0(yy,"0101")),
ymd(paste0(yy,"1231")),
by = "month") %>%
decimal_date %>%
fixed_scale_minmax(min_t, max_t)
target_coord <- tidyr::expand_grid(bathy_east_asia_sc, t = target_t)
names(target_coord) <- c("x", "y", "z", "t")
yy <- 2020
target_t <- seq(ymd(paste0(yy,"0101")),
ymd(paste0(yy,"1231")),
by = "month") %>%
decimal_date %>%
fixed_scale_minmax(min_t, max_t)
target_coord <- tidyr::expand_grid(bathy_east_asia_sc, t = target_t)
names(target_coord) <- c("x", "y", "z", "t")
scaled_no3_sample <- sample_4d
scaled_target_coord <- target_coord
scaled_target_coord
load("C:/Users/LGS/Desktop/bathy_sample_30min.RData")
# # target grid generation
bathy_east_asia_sc <- data.frame(x = (bathy_east_asia$x - min_x)/(range_x),
y = (bathy_east_asia$y - min_y)/(range_y),
z = (bathy_east_asia$z - min_z)/(range_z))
target_t <- seq(ymd(paste0(yy,"0101")),
ymd(paste0(yy,"1231")),
by = "month") %>%
decimal_date %>%
fixed_scale_minmax(min_t, max_t)
target_coord <- tidyr::expand_grid(bathy_east_asia_sc, t = target_t)
names(target_coord) <- c("x", "y", "z", "t")
no3_sample <- sample_4d
target_coord <- target_coord
no3_4d_sample <- sample_4d
usethis::use_data(no3_4d_sample)
usethis::use_data(target_coord)
target_coord_sample <- target_coord
usethis::use_data(target_coord_sample)
devtools::load_all(".")
data("no3_4d_sample")
data("no3_4d_sample")
data("target_coord_sample")
ex_vgm <- vge_st(
xi = sample_4d, s_var = 1:3, t_var = 4,
max_range = 0.5, lag_buffer = 0.1, overlap_factor = 2,
plot = TRUE
)
ex_vgm <- vge_st(
xi = no3_4d_sample, s_var = 1:3, t_var = 4,
max_range = 0.5, lag_buffer = 0.1, overlap_factor = 2,
plot = TRUE
)
data(STK::no3_4d_sample)
data("STK::no3_4d_sample")
data("no3_4d_sample", package = "STK")
data("target_coord_sample", package = "STK")
vg_fit <- vgt_st(
ex_vgm = ex_vgm,
vgm_list = list(vgm_s = "Sph", vgm_t = "Sph", vgm_jt = "Sph", vgm_st = "SumMetric"),
par0 = c(100, 300, 0.2, 100, 300, 0.3, 1.0, 1.0, 0.2, 0.1),
lower = c(0.01, 0.01, 0.05, 0.01, 0.01, 0.05, 0.01, 0.01, 0.05, 0.0001),
upper = c(400, 600, 2, 300, 500, 2, 300, 300, 2, 300),
plot = TRUE
)
stk_res <- st_krige(xi = no3_4d_sample, x0 = target_coord_sample,
s_var = 1:3, t_var = 4,
vgm_st = "SumMetric",
vgm_options = list(vgm_s = "Sph",
vgm_t = "Sph",
vgm_jt = "Sph",
pars = vg_fit$par),
step_size = 10000, n_cores = 10)
devtools::load_all(.)
install.packages("C:/Users/LGS/Desktop/STK_0.1.2.zip", repos = NULL, type = "win.binary")
library(STK)
library(STK)
library(tidyverse)
library(lubridate)
# period_st <- ymd(20200101) - days(90)
# period_ed <- ymd(20201231) + days(90)
#
#
# load("C:/Users/LGS/Desktop/bathy_sample_30min.RData")
#
# site_ext <- extent(c(-1606623.6, 810580.1, -785323.7, 1455642.5))
# depth_ext <- range(bathy_east_asia$z %>% unique)
#
#
# # data filtering
# no3_sample <- NW_obs %>%
#   filter(!is.na(NO3), !is.na(tm_x), !is.na(tm_y), !is.na(depth), !is.na(date_time),
#          NO3 < 45, NO3 >= 0) %>% # NO3 values were filtered based on WOD 18 Appendix
#   mutate(decimal_t = decimal_date(date_time)) %>%
#   filter(date_time >= period_st, date_time <= period_ed) %>%
#   as.data.frame
#
#
# # remove duplicated observation
# sample_4d <- no3_sample %>%
#   group_by(x = tm_x, y = tm_y, z = depth, t = decimal_t) %>%
#   summarise(val = mean(NO3, na.rm = T)) %>%
#   as.data.frame
#
# # pre defined object
# ## number of samples
# sample_n <- nrow(sample_4d)
#
#
# scale <- TRUE # coordinate scaling
#
#
# # scaling observation data.frame coordinates
# if(scale == TRUE){
#
#   ## for revert scaling values
#   min_x <- site_ext@xmin
#   max_x <- site_ext@xmax
#   min_y <- site_ext@ymin
#   max_y <- site_ext@ymax
#   min_z <- depth_ext[1]
#   max_z <- depth_ext[2]
#   min_t <- decimal_date(period_st)
#   max_t <- decimal_date(period_ed)
#   range_x <- max_x - min_x
#   range_y <- max_y - min_y
#   range_z <- max_z - min_z
#   range_t <- max_t - min_t
#
#   sample_4d[, "x"] <- fixed_scale_minmax(sample_4d[, "x"], min_x, max_x)
#   sample_4d[, "y"] <- fixed_scale_minmax(sample_4d[, "y"], min_y, max_y)
#   sample_4d[, "z"] <- fixed_scale_minmax(sample_4d[, "z"], min_z, max_z)
#   sample_4d[, "t"] <- fixed_scale_minmax(sample_4d[, "t"], min_t, max_t)
#
# }
#
#
#
# # # target grid generation
# bathy_east_asia_sc <- data.frame(x = (bathy_east_asia$x - min_x)/(range_x),
#                                  y = (bathy_east_asia$y - min_y)/(range_y),
#                                  z = (bathy_east_asia$z - min_z)/(range_z))
#
# target_t <- seq(ymd(paste0(yy,"0101")),
#                 ymd(paste0(yy,"1231")),
#                 by = "month") %>%
#   decimal_date %>%
#   fixed_scale_minmax(min_t, max_t)
#
#
# target_coord <- tidyr::expand_grid(bathy_east_asia_sc, t = target_t)
# names(target_coord) <- c("x", "y", "z", "t")
#
#
#
# no3_4d_sample <- sample_4d
# target_coord_sample <- target_coord
#
# using sample data
data("no3_4d_sample", package = "STK")
data("target_coord_sample", package = "STK")
ex_vgm <- vge_st(
xi = no3_4d_sample, s_var = 1:3, t_var = 4,
max_range = 0.5, lag_buffer = 0.1, overlap_factor = 2,
plot = TRUE
)
# step 3: fitting theoretical variogram using function `vgt()`
vg_fit <- vgt_st(
ex_vgm = ex_vgm,
vgm_list = list(vgm_s = "Sph", vgm_t = "Sph", vgm_jt = "Sph", vgm_st = "SumMetric"),
par0 = c(100, 300, 0.2, 100, 300, 0.3, 1.0, 1.0, 0.2, 0.1),
lower = c(0.01, 0.01, 0.05, 0.01, 0.01, 0.05, 0.01, 0.01, 0.05, 0.0001),
upper = c(400, 600, 2, 300, 500, 2, 300, 300, 2, 300),
plot = TRUE
)
stk_res <- st_krige(xi = no3_4d_sample, x0 = target_coord_sample,
s_var = 1:3, t_var = 4,
vgm_st = "SumMetric",
vgm_options = list(vgm_s = "Sph",
vgm_t = "Sph",
vgm_jt = "Sph",
pars = vg_fit$par),
step_size = 10000, n_cores = 10)
